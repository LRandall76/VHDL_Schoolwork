library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use ieee.std_logic_unsigned.all;

entity tb_Accumulator is
end tb_Accumulator;

architecture Behavioral of tb_Accumulator is

component Accumulator is
port(
signal CLK : in STD_LOGIC;
signal RST : in STD_LOGIC;
signal B : in std_logic_vector(7 downto 0);
signal OPCODE : in std_logic_vector(2 downto 0);
signal atoq : inout std_logic_vector(7 downto 0);
signal dtoresult : inout std_logic_vector(7 downto 0));
end component;

--Signals
signal CLK :  STD_LOGIC;
signal RST :  STD_LOGIC;
signal B :  std_logic_vector(7 downto 0);
signal OPCODE :  std_logic_vector(2 downto 0);
signal atoq : std_logic_vector(7 downto 0);
signal dtoresult : std_logic_vector(7 downto 0);

begin
duuut: Accumulator port map(
B => B,
CLK => CLK,
RST => RST,
OPCODE => OPCODE,
atoq => atoq,
dtoresult => dtoresult
);

--(A-5)*2+8
process
begin
CLK <= '1';
RST <= '1';
wait for 20 ns;
CLK <= '0';
wait for 20 ns;
CLK <= '1';
RST <= '0';
wait for 20 ns;
CLK <= '0';
wait for 20 ns;
CLK <= '1';
B <= "00010100";		--Initialize 20
OPCODE <= "001";
wait for 20 ns;
CLK <= '0';
wait for 20 ns;
CLK <= '1';
B <= "00000101";
OPCODE <= "101";	--Subtract 5
wait for 20 ns;
CLK <= '0';
wait for 20 ns;
CLK <= '1';
OPCODE <= "011";	--Multiply by 2
wait for 20 ns;
CLK <= '0';
wait for 20 ns;
CLK <= '1';
B <= "00001000";
OPCODE <= "001";	--ADD 8
wait for 20 ns;
CLK <= '0';
wait for 20 ns;
CLK <= '1';
OPCODE <= "100";
wait for 1000 ns;
end process; 

end Behavioral;
